<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8" />
  <title>React App</title>
  <link rel="stylesheet" type="text/css" href="/styles.css">
  <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
  <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>

 <!-- Don't use this in production: -->
 <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>

</head>
<body>
    <h2>Home Page</h2>
  <div id="root"></div>
    <script type="text/babel">

// create variable with unescaped JS data from server
let cars = <%- items %>;
console.log(cars)
     

// define other components

const Cars = (props) => {
  console.log(props)
  const listItems = props.cars.map(item =>
  <li key={item._id}><a href={"/detail?model="+item.model}>{item.model}</a></li>
  );

  
  return (
          <ul>{listItems}</ul>
          )
}
//     <h1>Home Page</h1>
// ReactDom.render(
//       <Cars cars={cars}/>,
//       document.getElementById('root'));
    
const Detail = (props) => {
      return (
        <div>
        <h3>Car Details</h3>
        { props.item &&
         <div> 
          <form>

            <b>Model</b>: <input type="text" name="model" onChange={props.changeHandler} value={props.item.model || ''} />
            <b>Price</b>:  <input type="text" name="price" onChange={props.changeHandler} value={props.item.Price  || ''} />
            <b>Year</b>:  <input type="text" name="year" onChange={props.changeHandler} value={props.item.year || ''} />
            </form>
            <button name="clear" onClick= {props.clearbutton}>Clear</button></div>
        }
        </div>
      )
    }
  

  //this is the parent component 
   const CarApp = () => {

    const [items, setItems] = React.useState(cars);
    const [selectedItem, setSelectedItems] = React.useState();
     // click handler event
  const itemClicked = (e) => {
      console.log('itemClicked')
        console.log(e.target.innerText);
        let found = cars.find((item) => {
            return item.model === e.target.innerText })
        setSelectedItems(found);
       } 

         // click handler event change
  const itemChanged = (e) => {
        let field = e.target.name;
        let newItem = {...selectedItem};
        newItem[field] =e.target.value;
        setSelectedItem(newItem);
       } 

       const clearbutton = (e) => {
      console.log('clearbutton')
        console.log(e.target.innerText);
        setSelectedItems();

      }

    

    return (
        <div> 
            
            <Cars cars={cars} clickHandler={itemClicked} />
            <Detail item={selectedItem} changeHandler={itemClicked} clearbutton={clearbutton} />
        </div>
    );
}
  


   const container = document.getElementById('root');
    const root = ReactDOM.createRoot(container);
    root.render(<CarApp />);

</script>

</body>
</html>
  